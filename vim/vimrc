set nocompatible
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8

let mapleader = " "

autocmd InsertEnter * set timeoutlen=0
autocmd InsertLeave * set timeoutlen=50

set ruler                         " display the line and column info.
set number                        " displaye the number of line.
set autoindent
set smartindent
set cindent

set list
set listchars=tab:>-,trail:-
" syntax enable on
" set cursorline
" set cursorcolumn

"- motion & operator ---------------------------------------------------------
set linebreak
set whichwrap=b,s,<,>,[,]       " cursor auto come to the next line.

set foldmethod=syntax
set nofoldenable

" record the position of the cursor.
set viewoptions=cursor
autocmd BufWinLeave ?* mkview
autocmd VimEnter ?* silent loadview

set mouse=a
set selection=exclusive
set selectmode=mouse,key
" set paste                     " conflict with coc.nvim
set wildmenu

"- search & match ------------------------------------------------------------
set hlsearch
set incsearch
set showmatch
set ignorecase
set smartcase

set splitbelow
set splitright

"- insert mode emacs key bingdings -------------------------------------------
function! s:home()
  let start_col = col('.')
  normal! ^
  if col('.') == start_col
    normal! 0
  endif
  return ''
endfunction

call plug#begin('~/.vim/plugged')
Plug 'francoiscabrol/ranger.vim'

Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-surround'

Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'sheerun/vim-polyglot'

Plug 'tpope/vim-fugitive' " A Git wrapper
Plug 'zivyangll/git-blame.vim' " light plugin for echo git commit info.

Plug 'fidian/hexmode' " hex mode for binary file

Plug 'edkolev/tmuxline.vim' " tmux linestatus
Plug 'bling/vim-bufferline' " buffer info status and cmd line
Plug 'vim-airline/vim-airline' " status-line format
Plug 'vim-airline/vim-airline-themes' " status-line color scheme
Plug 'phanviet/vim-monokai-pro'

Plug 'mhinz/vim-startify'                      " A simple plugin show the last file user has open
Plug 'junegunn/vim-easy-align'
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'     " To use snippets
Plug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }

" Plug 'ludovicchabant/vim-gutentags' " automatically generate tags


call plug#end()

" - LeaderF ------------------------------------------
let g:Lf_HideHelp = 1
let g:Lf_UseCache = 0
let g:Lf_UseVersionControlTool = 0
let g:Lf_IgnoreCurrentBufferName = 1

" popup mode
let g:Lf_WindowPosition = 'popup'
let g:Lf_PreviewInPopup = 1
let g:Lf_StlSeparator = { 'left': "\ue0b0", 'right': "\ue0b2", 'font': "DejaVu Sans Mono for Powerline" }
let g:Lf_PreviewResult = {'Function': 0, 'BufTag': 0 }

let g:Lf_ShortcutB = "<C-L>"
let g:Lf_ShortcutF = "<leader>ff"

noremap <leader>fb :<C-U><C-R>=printf("Leaderf buffer %s", "")<CR><CR>
noremap <leader>fm :<C-U><C-R>=printf("Leaderf mru %s", "")<CR><CR>
noremap <leader>ft :<C-U><C-R>=printf("Leaderf bufTag %s", "")<CR><CR>
noremap <leader>fl :<C-U><C-R>=printf("Leaderf line %s", "")<CR><CR>

" noremap <leader>f :LeaderfSelf<cr>
noremap <leader>fm :LeaderfMru<cr>
noremap <leader>fF :LeaderfFunction<cr>
noremap <leader>fb :LeaderfBufTagAll<cr>
noremap <leader>ft :LeaderfBufTag<cr>
noremap <leader>fl :LeaderfLine<cr>
noremap <leader>fw :LeaderfWindow<cr>


" - colorscheme ------------------------------------------
" let g:gruvbox_italic=1
colorscheme desert
colorscheme monokai_pro

"- coc-nvim -----------------------------------------------
set nobackup
set nowritebackup
set updatetime=300
set signcolumn=yes

inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"

inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

"- easymotion ---------------------------------------------
nmap <leader> <Plug>(easymotion-prefix)
let g:EasyMotion_do_mapping = 0                 " Disable default mappings
let g:EasyMotion_smartcase = 1                  " Turn on case-insensitive feature
let g:EasyMotion_startofline = 0                " keep cursor column when JK motion
nmap s <Plug>(easymotion-overwin-f2)
nmap , <Plug>(easymotion-bd-w)
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)

"- vim-airline ---------------------------------------------
let g:airline_theme='bubblegum'
let g:airline_powerline_fonts=1
let g:airline#extensions#branch#enabled=1
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#buffer_nr_show=1
let g:airline#extensions#tmuxline#enabled = 1

"- gutentags -----------------------------------------------
let g:gutentags_project_root = ['.root', '.svn', '.git', '.project']
let g:gutentags_ctags_tagfile = '.tags'
let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags
" detect if ~/.cache/tags exits.
if !isdirectory(s:vim_tags)
   silent! call mkdir(s:vim_tags, 'p')
endif

"- hexmode -------------------------------------------------
let g:hexmode_patterns = '*Image,*.bin,*.exe,*.dat,*.o,*.out,*.img,*iso'


highlight Normal guibg=NONE ctermbg=NONE
highlight EndOfBuffer guibg=NONE ctermbg=NONE

